```{r}
#| label: setup
#| include: false

# THIS SETUP CHUNK IS FOR BOTH REPORTS AND FOR METHODS

#LOAD LIBRARIES AND FUNCTIONS REQUIRED FOR REPORTS-----
library(corrr)
library(here)
library(ddh)
library(htmltools)
library(glue)
library(gt)
library(patchwork)
library(paws)
library(tidyverse)

#LOAD DATA-----
ddh::load_ddh_data(app_data_dir = here::here("data"))

# CONVERT PARAMS TO OBJECTS----
input_report = list(
  type = params$type,
  subtype = params$subtype,
  query = unlist(stringr::str_split(params$query, pattern = ", ")),
  content = unlist(stringr::str_split(params$content, pattern = ", "))
)

private_report <- as.logical(params$private)

#GET PRIVATE MESSAGES-----
# private <- function(x, publicValue=NULL) {
#   if (privateMode == TRUE) { x } else { publicValue }
# }

private_message_html <- "This analysis is currently in Beta, and is only available to premium subscribers. If you want to upgrade to support this project and access these data, subscribe at ', a(href = 'http://www.datadrivenhypothesis.com', 'datadrivenhypothesis.com')"
private_message_md <- "This analysis is currently in Beta, and is only available to premium subscribers. If you want to upgrade to support this project and access these data, subscribe at [datadrivenhypothesis.com](http://www.datadrivenhypothesis.com)"

# private_msg <- function() {
#   if (privateMode == FALSE) {
#     htmltools::tagList(private_message_html)
#   }
# }

#QUERY URL 
if(length(input_report$content) > 1){ #stringr::str_detect(input_report$content, ", "
  url_content <- glue::glue_collapse(input_report$content, sep = ",") #%>%
    #stringr::str_replace_all(pattern = " ", replacement = "%20")
} else {
  url_content <- input_report$content
}

base_url <- dplyr::if_else(private_report == TRUE, paste0("datadrivenhypothesis.com"), paste0("datadrivenhypothesis.org"))
query_url <- glue::glue('https://www.{base_url}/?show=gene&query={url_content}')
```

